import axios, { AxiosRequestConfig, AxiosInstance } from 'axios'
import { getToken } from './token'

const http = axios.create({
  baseURL: '/api',
  timeout: 5000
})

// 添加请求拦截器
http.interceptors.request.use(
  (config: AxiosRequestConfig) => {
    // 在请求头中添加 token
    const token = getToken()
    if (token) {
      config.headers = {
        Authorization: token
      }
    }
    return config
  },
  (error) => {
    return Promise.reject(error)
  }
)

// 添加响应拦截器
http.interceptors.response.use(
  (response) => {
    // 2xx 范围内的状态码都会触发该函数。
    // 对响应数据做点什么
    const res = response.data
    if (response.status === 200) {
      return res
    }
  },
  (error) => {
    // 超出 2xx 范围的状态码都会触发该函数。
    // 对响应错误做点什么
    console.dir(error)
    if (error.response.status === 401) {
      // 跳回到登录
      // console.log('login')
      // 第一种方法，弹幕说的方法
      window.location.href = '/login'
      // 第二种方法，老师讲得方法
      // router.push({ path: '/login' })
      // history.push('/login')
    }
    return Promise.reject(error)
  }
)

export default http
